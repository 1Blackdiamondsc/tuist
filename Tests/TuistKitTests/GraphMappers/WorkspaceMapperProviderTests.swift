import Foundation
import TuistGenerator
import XCTest

@testable import TuistCore
@testable import TuistKit
@testable import TuistSupportTesting

final class WorkspaceMapperProviderTests: TuistUnitTestCase {
    var subject: WorkspaceMapperProvider!
    
    override func setUp() {
        super.setUp()
        subject = .init()
    }
    
    override func tearDown() {
        subject = nil
        super.tearDown()
    }
    
    func test_mapper_does_not_returns_autogenerated_project_scheme_mapper_when_autogenerated_schemes_are_disabled() throws {
        // When
        let got = subject.mapper(
            config: Config.test(
                generationOptions: [
                    .disableAutogeneratedSchemes,
                ]
            )
        )
        
        // Then
        let sequentialWorkspaceMapper = try XCTUnwrap(got as? SequentialWorkspaceMapper)
        XCTAssertEqual(sequentialWorkspaceMapper.mappers.filter { $0 is AutogeneratedProjectSchemeWorkspaceMapper }.count, 0)
    }
    
    func test_mapper_does_not_returns_autogenerated_project_scheme_mapper() throws {
        // When
        let got = subject.mapper(config: Config.test())
        
        // Then
        let sequentialWorkspaceMapper = try XCTUnwrap(got as? SequentialWorkspaceMapper)
        XCTAssertEqual(sequentialWorkspaceMapper.mappers.filter { $0 is AutogeneratedProjectSchemeWorkspaceMapper }.count, 1)
    }
}
